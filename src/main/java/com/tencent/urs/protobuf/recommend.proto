package com.tencent.urs.protobuf;

message ItemDetailInfo
{
	required string Item = 1;
	required uint64 ImpDate = 2;


	optional uint64 BigType = 3;			//大类
	optional string BigTypeName = 4;		//大类中文描述
	
	optional uint64 MiddleType = 5;  		//中类
	optional string MiddleTypeName = 6;  	//中类中文描述
	
	optional uint64 SmallType = 7;			//小类
	optional string SmallTypeName = 8;		//小类中文描述

	optional uint32 FreeFlag = 9 ;			//收费类型
	optional uint32 PublicFlag = 10 ;		//状态类型
	
	optional float Price = 11;				//价格
	optional string Text = 12;				//备注
	optional uint64 ItemTime = 13;			//创建时间
	optional uint64 Platform = 14;			//所投放平台
	optional uint64 Score = 15;				//分值
	
	optional string shopId = 16;			//商品所属商家
}

message UserDetailInfo
{
	required string QQNum = 1;				//用户qq号码
	required uint64 ImpDate = 2;			//更新日期

	optional string Imei = 3;				//手机IMEI号
	optional string Uid = 4;				//业务帐号
	
	optional uint64 Level = 5;  			//用户等级
	optional uint64 RegDate = 6;  			//注册日期
	optional uint64 RegTime = 7;			//注册时间
}

message ActionWeightInfo
{
	optional uint64 impDate = 1;  			//更新日期
	optional float weight = 2;				//权重
}

message CateLevelInfo
{
	optional uint64 impDate = 1;  			//更新日期
	optional string name = 2;				//业务帐号
	optional string level = 3;				//业务帐号
	optional uint32 fatherId = 4;			//父类ID
}

message RecommendResult
{	
    message Result
    {
        required string Item = 1;			//商品ID
		optional uint64 BigType = 2;		//大类ID
		optional uint64 MiddleType = 3;  	//中类ID
		optional uint64 SmallType = 4;		//小类ID
		optional double Weight = 5;			//权重

		optional uint32 FreeFlag = 6;		//收费类型
		optional uint64 Price = 7;			//价格
		optional uint64 UpdateTime = 8;		//更新时间
		optional uint64 ExpireTime = 9;		//过期时间
		optional string Comment = 10;		//备注
		
		optional string shopId = 11;		//商品所属商家
    }
    repeated Result Results  = 1;
}

message UserActiveHistory
{	
    message ActiveRecord
    {
        required string Item        = 1;                            //item
		optional uint64 BigType      = 2;   						//item所属大类目
		optional uint64 MiddleType   = 3;  							//item所属中类目
		optional uint64 SmallType   = 4;  							//item所属小类目
		
		optional uint32 ActType = 5 ; 								//item行为类型
		optional string ActResult =	6;								//item行为的结果
        optional uint64 ActTime	 = 7; 								//item行为发生时间戳(s)
		optional uint64 ExpireTime = 8; 							//item行为失效时间
		optional string TablID = 9;									//item行为发生的场景
		optional string AlgID = 10;									//itme行为被推荐的算法
		optional string PlatForm = 11;								//item行为产生的平台
		optional string LBSInfo = 12;								//item行为产生时的LBS信息
		
		optional double Weight = 13 [default = 0.0];              	//行为权重
		
		optional string shopId = 14;								//商品所属商家
    }

    repeated ActiveRecord ActRecords  = 1;
}

message UserActiveDetail
{	
	message TimeSegment {	
		required uint64 TimeId = 1;	
		message ItemInfo{							
			required string Item = 1;                        	//商品ID
			message ActType
    		{
    			required uint32 ActType = 1 ; 
    			optional uint64 Count = 2;							//该item在该时间的段内，该行为的次数
    			optional uint64 LastUpdateTime = 3; 				//item行为发生时间戳(s)
    		}
    		repeated ActType acts = 2;
		}
		repeated ItemInfo items = 2;
	}				
	repeated TimeSegment tsegs = 1;
}

message CtrInfo
{	
	message TimeSegment {		
		required uint64 timeId = 1;						
		optional uint64 click = 2;								//点击数
		optional uint64 impress = 3;							//曝光数
	}
    repeated TimeSegment tsegs  = 1;
}


message UserCountInfo{
	message TimeSegment {		
		required uint64 timeId = 1;						
		optional float count = 2;								//权重
	}
    repeated TimeSegment tsegs  = 1;
}


message GroupCountInfo{
	message TimeSegment {		
		required uint64 timeId = 1;						
		optional float count = 2;								//权重
	}
    repeated TimeSegment tsegs  = 1;
}

message UserPairInfo{
	message ItemPairs {			
		required string itemPair = 1;
		required uint64 lastTimeId = 2;	
		required float lastCount = 3;
	}
    	repeated ItemPairs ipairs  = 1;
}

message GroupPairInfo{
	message TimeSegment {		
		required uint64 timeId = 1;						
		optional float count = 2;								//权重
	}
    repeated TimeSegment tsegs  = 1;
}

option optimize_for = LITE_RUNTIME;
